/* Copyright 2013-2023 Axel Huebl, Heiko Burau, Rene Widera, Lennert Sprenger
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/fields/differentiation/Curl.def"
#include "picongpu/fields/MaxwellSolver/CCK/Derivative.def"
#include "picongpu/fields/MaxwellSolver/FDTD/FDTD.def"
#include "picongpu/fields/MaxwellSolver/Yee/Yee.def"

#include <pmacc/math/Vector.hpp>


namespace picongpu
{
    namespace fields
    {
        namespace maxwellSolver
        {
            namespace cck
            { 
                constexpr uint CherenkovFreeDirection_Y = 1;

                using CurlB = differentiation::Curl<differentiation::Backward>;

                template <uint32_t T_cherenkovFreeDirection>
                using CurlE = differentiation::Curl<Derivative<T_cherenkovFreeDirection>>;
            }
            
            // use the modified CurlE operator and the standard yee CurlB operator
            template <uint32_t T_cherenkovFreeDir = cck::CherenkovFreeDirection_Y>
            using CCK = FDTD<cck::CurlE<T_cherenkovFreeDir>, cck::CurlB>;

        } // namespace maxwellSolver
    } // namespace fields
} // namespace picongpu
